# /etc/nginx/sites-available/ink-api.sogni.ai.conf
# Nginx behind Cloudflare (Flexible SSL) â€” origin listens on port 80 only.

# Upstream configuration for Node.js app
upstream sogni_api {
    server 127.0.0.1:3001;
    keepalive 64;
}

server {
    listen 80;
    listen [::]:80;
    server_name ink-api.sogni.ai;

    # IMPORTANT: Do NOT redirect to HTTPS when using Cloudflare Flexible,
    # or you'll create an infinite redirect loop. Cloudflare serves HTTPS to users.

    # --- Security headers (sent on all responses) ---
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # --- CORS headers removed - handled by Express app ---
    # Express app handles CORS, so we don't add headers here to avoid conflicts

    # Default proxy for API
    location / {
        # OPTIONS requests are handled by Express CORS middleware

        proxy_pass http://sogni_api;
        proxy_http_version 1.1;

        # WebSocket upgrades
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Standard proxy headers
        proxy_set_header Host $host;

        # Real client IPs (now that real_ip_* is set)
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Preserve the user's original scheme as seen at the edge (CF sets this)
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

        proxy_cache_bypass $http_upgrade;

        # Timeouts for long-running requests (AI generation)
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Buffer settings
        proxy_buffering off;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Server-Sent Events (SSE): unbuffered, long-lived
    location ~ ^/api/progress/ {
        proxy_pass http://sogni_api;
        proxy_http_version 1.1;

        # SSE specifics
        proxy_set_header Connection "";
        proxy_set_header Cache-Control "no-cache";
        proxy_set_header X-Accel-Buffering "no";

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

        # Disable buffering for SSE
        proxy_buffering off;

        # Long timeout for SSE connections
        proxy_read_timeout 3600s;

        # SSE response headers
        add_header Content-Type "text/event-stream" always;
        add_header Cache-Control "no-cache" always;
        add_header X-Accel-Buffering "no" always;
    }

    # --- Rate limiting ---
    # NOTE: 'limit_req_zone' MUST be defined in the 'http' context (e.g., /etc/nginx/nginx.conf).
    # Example to put in nginx.conf:
    #   http {
    #       limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    #       include /etc/nginx/cloudflare/ips.conf;  # if you maintain CF IPs here
    #       ...
    #   }
    #
    # Then enable it here (uncomment after defining the zone):
    # limit_req zone=api_limit burst=20 nodelay;

    # Request body size limit (for image uploads if needed)
    client_max_body_size 10M;

    # Logging
    access_log /var/log/nginx/ink-api.sogni.ai.access.log;
    error_log  /var/log/nginx/ink-api.sogni.ai.error.log;
}
